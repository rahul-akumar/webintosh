name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build with PR-specific base path
        run: |
          # Set base URL for PR preview
          export NUXT_APP_BASE_URL=/webintosh/pr-${{ github.event.pull_request.number }}/
          pnpm run generate
        env:
          NITRO_PRESET: static

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create gh-pages branch if it doesn't exist
        run: |
          if [ ! -d "gh-pages" ]; then
            mkdir gh-pages
            cd gh-pages
            git init
            git checkout -b gh-pages
            git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            cd ..
          fi

      - name: Deploy PR preview
        run: |
          # Create PR preview directory
          mkdir -p gh-pages/pr-${{ github.event.pull_request.number }}
          
          # Copy built files to PR directory
          cp -r .output/public/* gh-pages/pr-${{ github.event.pull_request.number }}/
          
          # Commit and push
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy PR #${{ github.event.pull_request.number }} preview" || echo "No changes to commit"
          git push origin gh-pages

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://${{ github.repository_owner }}.github.io/webintosh/pr-${prNumber}/`;
            
            const comment = `ðŸš€ **Preview Deployment Ready!**
            
            Preview URL: ${previewUrl}
            
            This preview will be updated automatically when you push new commits to this PR.`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment Ready')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment,
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create gh-pages branch if it doesn't exist
        run: |
          if [ ! -d "gh-pages" ]; then
            mkdir gh-pages
            cd gh-pages
            git init
            git checkout -b gh-pages
            git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            cd ..
          fi

      - name: Remove PR preview
        run: |
          rm -rf pr-${{ github.event.pull_request.number }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Remove PR #${{ github.event.pull_request.number }} preview" || echo "No changes to commit"
          git push origin gh-pages

      - name: Comment PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: 'ðŸ§¹ Preview deployment has been cleaned up.',
            });
